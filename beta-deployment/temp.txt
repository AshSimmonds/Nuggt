st.markdown("""
        **Step 1:** Write your instruction. Below are variables provided:

        - **Define user input:** 
            - `{text: variable name}`. Eg, `{text:stock_name}`, `{text:youtube_url}`
            - `{upload: file name}`. Eg, `{upload: annual_report.pdf}`, `{upload: main.py}`

        - **Define tools:** 
            - `{tool: tool_name}`. Eg, python, search, video_tool, llm, stable_diffusion, generate_video, image_caption

        **Step 2:** Define your output format to be an "Acknowledgement".

        **Step 3:** Generate your application. 

        **Step 4:** Use your application by providing it input and downloading your output.
        """)

        st.markdown("---")

        st.subheader("About")
        st.markdown("""
        **Nuggt** allows you to build and share end-to-end applications using large language model. As we are currently in alpha, we appreciate feedback to improve the platform and the responses.
        """)

        st.markdown("---")

        st.subheader("Use Cases")

        st.markdown("""
        **Create a finance bot to get Moving Average Convergence/Divergence indicator over the last 7 days**

        **Instructions:** Using yfinance api, which is already installed, pull the last 7 days OHLC data for `{text:stock_name}` using `{tool:python}`, calculate the MACD and save only the MACD to a text file called `{text:file_name}` in the project repository using `{tool:python}`. If you are stuck in a loop, try another strategy.

        **Input:** stock_name is **TSLA**, file_name is **tsla_macd.txt**.

        **Create an image bot that takes in an image as inspiration and generates variations of it using stable diffusion**

        **Instructions:** Take in an image: `{upload:inspiration_image}` using `{tool:python}` and come up with a creative prompt that matches the contents of the image. Then use `{tool:stable_diffusion}` to generate an image save it as `{text:file_name}`.

        **Input:** inspiration_image is a **.png file** that you upload, file_name is **generated_image.png**.
        """)